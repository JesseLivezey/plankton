!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.tfd_semi.TFDSemi {
        which_set: 'semisupervised',
        one_hot: True,
        scale: True,
        shuffle: True
    },
    model: !obj:pylearn2.models.mlp.MLP {
        input_space: !obj:pylearn2.space.VectorSpace {
                         dim: 2304,
        },
        input_source: 'features',
        layers: [ !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h0',
                     dim: %(L0dim)i,
                     istdev: %(L0std)f,
                     max_col_norm: %(max_col_norm)f,
                 },  !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h1',
                     dim: %(L1dim)i,
                     istdev: %(L1std)f,
                     max_col_norm: %(max_col_norm)f,
                 },  !obj:pylearn2.models.bal_mlp.FlattenerCostLayer {
                     raw_layer: !obj:pylearn2.models.mlp.CompositeLayer {
                         layer_name: 'composite',
                         layers: [ !obj:pylearn2.models.mlp.Linear {
                                     layer_name: 'y_h',
                                     dim: 7,
                                     istdev: %(ystd)f,
                                     max_col_norm: %(max_col_norm)f,
                             }, !obj:pylearn2.models.mlp.Linear {
                                     layer_name: 'z_h',
                                     dim: %(zdim)i, 
                                     istdev: %(zstd)f,
                                     max_col_norm: %(max_col_norm)f,
                             } ]
                      }
                 },  !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h_2',
                     dim: %(L_2dim)i,
                     istdev: %(L_2std)f,
                     max_col_norm: %(max_col_norm)f,
                 },  !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h_1',
                     dim: %(L_1dim)i,
                     istdev: %(L_1std)f,
                     max_col_norm: %(max_col_norm)f,
                 },  !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h_0',
                     dim: 2304,
                     istdev: %(L_0std)f,
                     max_col_norm: %(max_col_norm)f,
                 }
                ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 128,
        learning_rate: .000000001,
        train_iteration_mode: 'random_slice',
        batches_per_iter: 500,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:pylearn2.datasets.tfd_semi.TFDSemi {
                              which_set: 'valid',
                              one_hot: True,
                              scale: True,
                              shuffle: True,
                          },
            },
        monitoring_costs: {'misclass': !obj:pylearn2.costs.mlp.layer_cost.FlattenerMisclass {
                          }},
        monitoring_batches: 1,
        monitoring_batch_size: 428,
        monitor_iteration_mode: 'random_slice',
        cost: !obj:pylearn2.costs.cost.SumOfCosts { costs: [
                [100., !obj:pylearn2.costs.mlp.layer_cost.FlattenerCost { } ],
                [1., !obj:pylearn2.costs.mlp.layer_cost.MLPAE { } ], 
                [100., !obj:pylearn2.costs.mlp.layer_cost.XCov { } ]
            ]
        },
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.AdaDelta {
                decay: .99
        },
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: "valid_term_1_ae_mse",
                    prop_decrease: .95,
                    N: 10000000
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: 200
                }
            ]
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_term_1_ae_mse',
             save_path: "model.pkl"
        }
    ]
}
